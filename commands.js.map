{"version":3,"file":"commands.js","mappings":"YAUA,SAASA,EAAiBC,GACxB,IAAMC,EAAU,CACdC,KAAMC,OAAOC,aAAaC,4BAA4BC,qBACtDL,QAASD,EACTO,KAAM,aACNC,YAAY,GAIdL,OAAOM,QAAQC,QAAQC,KAAKC,qBAAqBC,aAAa,SAAUZ,EAC1E,CAlBAE,OAAOW,SAAQ,WACb,IAwEFX,OAAOY,QAAQC,UAAU,UArDzB,SAAgBC,GACdd,OAAOM,QAAQC,QAAQC,KAAKO,qBAAoB,SAACC,GAC/C,GAAIA,EAAOC,SAAWjB,OAAOkB,kBAAkBC,UAAW,CACxD,IAAIC,EAAcJ,EAAOK,MAEzB,GAAID,EAAYE,OAAS,EAAG,CAE1BC,QAAQC,IAAIJ,GACZ,IAAIK,EAAmBL,EAAYM,KAAI,SAACC,GAAG,YAAAC,OAAWD,EAAIE,KAAI,SAAAD,OAAQD,EAAIG,eAAc,aAAUC,KAAK,KAGvG/B,OAAOM,QAAQC,QAAQC,KAAKwB,KAAKC,SAAS,QAAQ,SAACC,GACjD,GAAIA,EAAWjB,SAAWjB,OAAOkB,kBAAkBC,UAAW,CAC5D,IAGIgB,EAHYD,EAAWb,MAGGI,EAG9BzB,OAAOM,QAAQC,QAAQC,KAAKwB,KAAKI,SAASD,EAAa,CAAEE,aAAc,SAAU,SAACC,GAC5EA,EAAcrB,SAAWjB,OAAOkB,kBAAkBC,WAEpDL,EAAMyB,YACN3C,EAAiB,0CAGjB2B,QAAQiB,MAAM,uBAAwBF,EAAcE,MAAM1C,SAC1DF,EAAiB,uBAAyB0C,EAAcE,MAAM1C,SAC9DgB,EAAMyB,YAEV,GACF,MAEEhB,QAAQiB,MAAM,uBAAwBN,EAAWM,MAAM1C,SACvDF,EAAiB,uBAAyBsC,EAAWM,MAAM1C,SAC3DgB,EAAMyB,WAEV,GACF,MAEE3C,EAAiB,gCACjBkB,EAAMyB,WAEV,MAEEhB,QAAQiB,MAAM,8BAA+BxB,EAAOwB,MAAM1C,SAC1DF,EAAiB,8BAAgCoB,EAAOwB,MAAM1C,SAC9DgB,EAAMyB,WAEV,GACF,G","sources":["webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["/* global Office */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called.\n});\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param {string} Notificationmessage - The message to show in the notification.\n */\nfunction ShowNotification(Notificationmessage) {\n  const message = {\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n    message: Notificationmessage,\n    icon: \"Icon.80x80\",\n    persistent: true,\n  };\n\n  // Show a notification message.\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\"action\", message);\n}\n\nfunction action(event) {\n  Office.context.mailbox.item.getAttachmentsAsync((result) => {\n    if (result.status === Office.AsyncResultStatus.Succeeded) {\n      let attachments = result.value;\n\n      if (attachments.length > 0) {\n        // Proceed only if there are attachments\n        console.log(attachments);\n        let attachmentString = attachments.map((att) => `<< ${att.name} >> (${att.attachmentType})<br/>`).join(\" \");\n\n        // Get the body of the email\n        Office.context.mailbox.item.body.getAsync(\"html\", (bodyResult) => {\n          if (bodyResult.status === Office.AsyncResultStatus.Succeeded) {\n            let emailBody = bodyResult.value;\n\n            // Insert attachment string at the beginning of the email\n            let updatedBody = emailBody + attachmentString;\n\n            // Set the updated body back to the email\n            Office.context.mailbox.item.body.setAsync(updatedBody, { coercionType: \"html\" }, (setBodyResult) => {\n              if (setBodyResult.status === Office.AsyncResultStatus.Succeeded) {\n                // Finish the send event\n                event.completed();\n                ShowNotification(\"Attachment names added successfully.\");\n              } else {\n                // Error handling if setting the body fails\n                console.error(\"Error setting body: \", setBodyResult.error.message);\n                ShowNotification(\"Error setting body: \" + setBodyResult.error.message);\n                event.completed();\n              }\n            });\n          } else {\n            // Error handling if getting the body fails\n            console.error(\"Error getting body: \", bodyResult.error.message);\n            ShowNotification(\"Error getting body: \" + bodyResult.error.message);\n            event.completed();\n          }\n        });\n      } else {\n        // No attachments found, display a message or continue without modification\n        ShowNotification(\"No attachments found to add.\");\n        event.completed();\n      }\n    } else {\n      // Error handling if getting attachments fails\n      console.error(\"Error getting attachments: \", result.error.message);\n      ShowNotification(\"Error getting attachments: \" + result.error.message);\n      event.completed();\n    }\n  });\n}\n\n// Register the function with Office.\nOffice.actions.associate(\"action\", action);\n"],"names":["ShowNotification","Notificationmessage","message","type","Office","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","context","mailbox","item","notificationMessages","replaceAsync","onReady","actions","associate","event","getAttachmentsAsync","result","status","AsyncResultStatus","Succeeded","attachments","value","length","console","log","attachmentString","map","att","concat","name","attachmentType","join","body","getAsync","bodyResult","updatedBody","setAsync","coercionType","setBodyResult","completed","error"],"sourceRoot":""}